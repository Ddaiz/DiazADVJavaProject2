/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diazadvjavaproject2;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Dave
 */
public class GUI extends javax.swing.JFrame 
{
    // Create 3 basic Car examples with make model and clor
    Car Car1 = new Car("Ford", "Mustang", Color.RED);
    Car Car2 = new Car("Nissan", "Altima", Color.BLUE);
    Car Car3 = new Car("Cheverlet", "Impala", Color.GREEN);
    private int count = 1;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radGreen = new javax.swing.JRadioButton();
        radBlue = new javax.swing.JRadioButton();
        radRed = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        btnBrake = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnAccel = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(radGreen);
        radGreen.setText("GREEN");

        buttonGroup1.add(radBlue);
        radBlue.setText("BLUE");

        buttonGroup1.add(radRed);
        radRed.setText("RED");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(radRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radBlue)
                .addGap(44, 44, 44)
                .addComponent(radGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radBlue)
                    .addComponent(radGreen)
                    .addComponent(radRed))
                .addContainerGap())
        );

        jLabel1.setText("Color:");

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        btnBrake.setText("Brake");
        btnBrake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrakeActionPerformed(evt);
            }
        });

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnAccel.setText("Accelerate");
        btnAccel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccelActionPerformed(evt);
            }
        });

        btnPrev.setText("<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBrake, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAccel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnAccel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrake)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrev)
                            .addComponent(btnNext))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // When button btnAccel is pressed, it will accelerate and display the change in speed for whatever
    // car matches the count
    private void btnAccelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccelActionPerformed
        // If count == 1
        if (count == 1)
        {
            // Ensure count matches the object with the same number
            count = 1;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately
            colorSelect();                        
            Color theColor = Car1.getColor();
            
            // Increase car's speed by 5 units.
            Car1.accelerate();
            
            // Display changes in the color and speed
            txtOutput.setText("Make: " + Car1.getMake() + "\n" + "Model: " + Car1.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car1.getSpeed());
        }
        // If count == 3
        if (count == 2)
        {
            // Ensure count matches the object with the same number
            count = 2;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately
            colorSelect();            
            Color theColor = Car2.getColor();
            
            // Increase car's speed by 5 units.
            Car2.accelerate();
            txtOutput.setText("Make: " + Car2.getMake() + "\n" + "Model: " + Car2.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car2.getSpeed());            
        }
        // If count == 3
        if (count == 3)
        {
            // Ensure count matches the object with the same number
            count = 3;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately            
            colorSelect();            
            Color theColor = Car3.getColor();
            
            // Increase car's speed by 5 units.
            Car3.accelerate();
            // Display changes in the color and speed
            txtOutput.setText("Make: " + Car3.getMake() + "\n" + "Model: " + Car3.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car3.getSpeed());            
        }
    }//GEN-LAST:event_btnAccelActionPerformed

    // When button btnBrake is pressed, it will brake and display the change in speed for whatever
    // car matches the count    
    private void btnBrakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrakeActionPerformed
        // If count == 1
        if (count == 1)
        {
            // Ensure count matches the object with the same number
            count = 1;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            Color theColor = Car1.getColor();
            
            // If the car object's speeds is less than or equal to 0, display popup
            // dialog box to prevent the speed from decreasing below 0.
            if (Car1.getSpeed() <= 0)
            {
                JOptionPane.showMessageDialog(null, "Car has come to a stop.");
                return;
            }
            else
            {
                // Decrease car's speed by 5 units.
                Car1.brake();
                txtOutput.setText("Make: " + Car1.getMake() + "\n" + "Model: " + Car1.getModel()
                + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
                + Car1.getSpeed());                
            }
        }
        // If count == 2
        if (count == 2)
        {
            // Ensure count matches the object with the same number
            count = 2;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            Color theColor = Car2.getColor();
            
            // If the car object's speeds is less than or equal to 0, display popup
            // dialog box to prevent the speed from decreasing below 0.            
            if (Car2.getSpeed() <= 0)
            {
                JOptionPane.showMessageDialog(null, "Car has come to a stop.");
                return;
            }
            else
            {
                // Decrease car's speed by 5 units.
                Car2.brake();
                // Display changes in the color and speed
                txtOutput.setText("Make: " + Car2.getMake() + "\n" + "Model: " + Car2.getModel()
                + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
                + Car2.getSpeed());                 
            }
        }
        // If count == 3
        if (count == 3)
        {
            // Ensure count matches the object with the same number
            count = 3;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            Color theColor = Car3.getColor();
            
            // If the car object's speeds is less than or equal to 0, display popup
            // dialog box to prevent the speed from decreasing below 0.            
            if (Car3.getSpeed() <= 0)
            {
                JOptionPane.showMessageDialog(null, "Car has come to a stop.");
                return;
            }
            else
            {
                // Decrease car's speed by 5 units.
                Car3.brake();
                // Display changes in the color and speed
                txtOutput.setText("Make: " + Car3.getMake() + "\n" + "Model: " + Car3.getModel()
                + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: "
                + Car3.getSpeed());
            }
        }
    }//GEN-LAST:event_btnBrakeActionPerformed
    // When button btnPrev is pressed, it decrement the counter to see the previous car
    // until the first car is shown
    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // Decrement counter by 1.
        count -= 1;
        
        // If count < 1 or count == 1
        if ((count < 1) || (count == 1))
        {
            // Ensure count matches the object with the same number
            count = 1;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately               
            colorSelect();
            Color theColor = Car1.getColor();
            
            // Display changes in the color and speed            
            txtOutput.setText("Make: " + Car1.getMake() + "\n" + "Model: " + Car1.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car1.getSpeed());            
        }
        else if ((count == 3))
        {
            // Ensure count matches the object with the same number
            count = 3;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately               
            colorSelect();
            Color theColor = Car3.getColor();
           
            // Display changes in the color and speed            
            txtOutput.setText("Make: " + Car3.getMake() + "\n" + "Model: " + Car3.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: "
            + Car3.getSpeed());            
        }
        else
        {
            // Ensure count matches the object with the same number
            count = 2;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately               
            colorSelect();
            Color theColor = Car2.getColor();
            
            // Display changes in the color and speed
            txtOutput.setText("Make: " + Car2.getMake() + "\n" + "Model: " + Car2.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car2.getSpeed());   
        }
    }//GEN-LAST:event_btnPrevActionPerformed
    // When button btnNext is pressed, it increment the counter to see the next car
    // until the last car is shown
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // Decrement counter by 1.
        count += 1;
        if (count == 1)
        {
            // Ensure count matches the object with the same number
            count = 1;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            
            Color theColor = Car1.getColor();
                   
            // Display changes in the color and speed  
            txtOutput.setText("Make: " + Car1.getMake() + "\n" + "Model: " + Car1.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car1.getSpeed());            
        }
        else if ((count == 3) || (count > 3))
        {
            // Ensure count matches the object with the same number
            count = 3;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            
            Color theColor = Car3.getColor();
            
            // Display changes in the color and speed  
            txtOutput.setText("Make: " + Car3.getMake() + "\n" + "Model: " + Car3.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: "
            + Car3.getSpeed());
        }
        else
        {
            // Ensure count matches the object with the same number
            count = 2;
            // colorSelect() method checks if the any of the radio buttons have beeen
            // selected and changes the object memeber's color value appropriately              
            colorSelect();
            
            Color theColor = Car2.getColor();
            
            // Display changes in the color and speed  
            txtOutput.setText("Make: " + Car2.getMake() + "\n" + "Model: " + Car2.getModel()
            + "\n" + "Color: " + renameColor(theColor) + "\n" + "Speed: " 
            + Car2.getSpeed());   
        }
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    // This method renameColor with return a String colorName after being passed
    // a Color value to be displayed in a normal fashion
    public static String renameColor (Color theColor)
    {
        // Placeholder String colorName
        String colorName = "";
        // if the Color value Color.RED equals theColor
        if (Color.RED.equals(theColor)) 
        {
            // return String colorName = "RED"
            return colorName = "RED";
        } 
        // if the Color value Color.Blue equals theColor
        else if (Color.BLUE.equals(theColor)) 
        {
            // return String colorName = "BLUE"
            return colorName = "BLUE";
        }
        // else the Color value is Color.GREEN 
        else 
        {
            // return String colorName = "GREEN"
            return colorName = "GREEN";
        }  
    }
    
    // This method colorSelect changes the correspond objects value using count and
    // whether or not a specific button is selected before displaying it to the user
    public void colorSelect()
    {
        // If radio button radRed is selected
        if (radRed.isSelected() == true) 
        {
            // Using count in a switch statement
            switch (count)
            {
                // Set the matching case to the corresponding car to make their
                // Color value Color.RED
                case 1:
                    Car1.setColor(Color.RED);
                    break;
                case 2:
                    Car2.setColor(Color.RED);
                    break;
                default:
                    Car3.setColor(Color.RED);
                    break;
            }
        }
        // Else if radio button radBlue is selected
        else if (radBlue.isSelected() == true) 
        {
            // Using count in a switch statement
            switch (count) 
            {
                // Set the matching case to the corresponding car to make their
                // Color value Color.BLUE
                case 1:
                    Car1.setColor(Color.BLUE);
                    break;
                case 2:
                    Car2.setColor(Color.BLUE);
                    break;
                default:
                    Car3.setColor(Color.BLUE);
                    break;
            }
        }
        // Else if radio button radGreen is selected
        else if (radGreen.isSelected() == true) 
        {
            // Using count in a switch statement
            switch (count) 
            {
                // Set the matching case to the corresponding car to make their
                // Color value Color.GREEN
                case 1:
                    Car1.setColor(Color.GREEN);
                    break;
                case 2:
                    Car2.setColor(Color.GREEN);
                    break;
                default:
                    Car3.setColor(Color.GREEN);
                    break;
            }
        }  
        // If none of the buttons are selected
        if ((radRed.isSelected() != true) && radBlue.isSelected() != true 
                && radGreen.isSelected() != true)
        {
            // Using count in a switch statement
            switch (count) 
            {   // Set each car to their original color value
                case 1:
                    Car1.setColor(Color.RED);
                    break;
                case 2:
                    Car2.setColor(Color.BLUE);
                    break;
                default:
                    Car3.setColor(Color.GREEN);
                    break;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccel;
    private javax.swing.JButton btnBrake;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radBlue;
    private javax.swing.JRadioButton radGreen;
    private javax.swing.JRadioButton radRed;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
